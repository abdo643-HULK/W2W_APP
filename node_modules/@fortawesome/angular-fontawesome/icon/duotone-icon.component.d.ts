import { IconDefinition, IconProp } from '@fortawesome/fontawesome-svg-core';
import { FaIconComponent } from './icon.component';
import * as ɵngcc0 from '@angular/core';
export declare class FaDuotoneIconComponent extends FaIconComponent {
    /**
     * Swap the default opacity of each duotone icon’s layers. This will make an
     * icon’s primary layer have the default opacity of 40% rather than its
     * secondary layer.
     *
     * @default false
     */
    swapOpacity?: 'true' | 'false' | boolean;
    /**
     * Customize the opacity of the primary icon layer.
     * Valid values are in range [0, 1.0].
     *
     * @default 1.0
     */
    primaryOpacity?: string | number;
    /**
     * Customize the opacity of the secondary icon layer.
     * Valid values are in range [0, 1.0].
     *
     * @default 0.4
     */
    secondaryOpacity?: string | number;
    /**
     * Customize the color of the primary icon layer.
     * Accepts any valid CSS color value.
     *
     * @default CSS inherited color
     */
    primaryColor?: string;
    /**
     * Customize the color of the secondary icon layer.
     * Accepts any valid CSS color value.
     *
     * @default CSS inherited color
     */
    secondaryColor?: string;
    protected findIconDefinition(i: IconProp | IconDefinition): IconDefinition | null;
    protected buildParams(): {
        title: string;
        transform: import("@fortawesome/fontawesome-svg-core").Transform;
        classes: string[];
        mask: IconDefinition;
        styles: import("@fortawesome/fontawesome-svg-core").Styles;
        symbol: string | boolean;
        attributes: {
            role: string;
        };
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FaDuotoneIconComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FaDuotoneIconComponent, "fa-duotone-icon", never, { "swapOpacity": "swapOpacity"; "primaryOpacity": "primaryOpacity"; "secondaryOpacity": "secondaryOpacity"; "primaryColor": "primaryColor"; "secondaryColor": "secondaryColor"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVvdG9uZS1pY29uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJkdW90b25lLWljb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJY29uRGVmaW5pdGlvbiwgSWNvblByb3AgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnO1xyXG5pbXBvcnQgeyBGYUljb25Db21wb25lbnQgfSBmcm9tICcuL2ljb24uY29tcG9uZW50JztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmFEdW90b25lSWNvbkNvbXBvbmVudCBleHRlbmRzIEZhSWNvbkNvbXBvbmVudCB7XHJcbiAgICAvKipcclxuICAgICAqIFN3YXAgdGhlIGRlZmF1bHQgb3BhY2l0eSBvZiBlYWNoIGR1b3RvbmUgaWNvbuKAmXMgbGF5ZXJzLiBUaGlzIHdpbGwgbWFrZSBhblxyXG4gICAgICogaWNvbuKAmXMgcHJpbWFyeSBsYXllciBoYXZlIHRoZSBkZWZhdWx0IG9wYWNpdHkgb2YgNDAlIHJhdGhlciB0aGFuIGl0c1xyXG4gICAgICogc2Vjb25kYXJ5IGxheWVyLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IGZhbHNlXHJcbiAgICAgKi9cclxuICAgIHN3YXBPcGFjaXR5PzogJ3RydWUnIHwgJ2ZhbHNlJyB8IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEN1c3RvbWl6ZSB0aGUgb3BhY2l0eSBvZiB0aGUgcHJpbWFyeSBpY29uIGxheWVyLlxyXG4gICAgICogVmFsaWQgdmFsdWVzIGFyZSBpbiByYW5nZSBbMCwgMS4wXS5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCAxLjBcclxuICAgICAqL1xyXG4gICAgcHJpbWFyeU9wYWNpdHk/OiBzdHJpbmcgfCBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIEN1c3RvbWl6ZSB0aGUgb3BhY2l0eSBvZiB0aGUgc2Vjb25kYXJ5IGljb24gbGF5ZXIuXHJcbiAgICAgKiBWYWxpZCB2YWx1ZXMgYXJlIGluIHJhbmdlIFswLCAxLjBdLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IDAuNFxyXG4gICAgICovXHJcbiAgICBzZWNvbmRhcnlPcGFjaXR5Pzogc3RyaW5nIHwgbnVtYmVyO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDdXN0b21pemUgdGhlIGNvbG9yIG9mIHRoZSBwcmltYXJ5IGljb24gbGF5ZXIuXHJcbiAgICAgKiBBY2NlcHRzIGFueSB2YWxpZCBDU1MgY29sb3IgdmFsdWUuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgQ1NTIGluaGVyaXRlZCBjb2xvclxyXG4gICAgICovXHJcbiAgICBwcmltYXJ5Q29sb3I/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEN1c3RvbWl6ZSB0aGUgY29sb3Igb2YgdGhlIHNlY29uZGFyeSBpY29uIGxheWVyLlxyXG4gICAgICogQWNjZXB0cyBhbnkgdmFsaWQgQ1NTIGNvbG9yIHZhbHVlLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IENTUyBpbmhlcml0ZWQgY29sb3JcclxuICAgICAqL1xyXG4gICAgc2Vjb25kYXJ5Q29sb3I/OiBzdHJpbmc7XHJcbiAgICBwcm90ZWN0ZWQgZmluZEljb25EZWZpbml0aW9uKGk6IEljb25Qcm9wIHwgSWNvbkRlZmluaXRpb24pOiBJY29uRGVmaW5pdGlvbiB8IG51bGw7XHJcbiAgICBwcm90ZWN0ZWQgYnVpbGRQYXJhbXMoKToge1xyXG4gICAgICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBpbXBvcnQoXCJAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmVcIikuVHJhbnNmb3JtO1xyXG4gICAgICAgIGNsYXNzZXM6IHN0cmluZ1tdO1xyXG4gICAgICAgIG1hc2s6IEljb25EZWZpbml0aW9uO1xyXG4gICAgICAgIHN0eWxlczogaW1wb3J0KFwiQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlXCIpLlN0eWxlcztcclxuICAgICAgICBzeW1ib2w6IHN0cmluZyB8IGJvb2xlYW47XHJcbiAgICAgICAgYXR0cmlidXRlczoge1xyXG4gICAgICAgICAgICByb2xlOiBzdHJpbmc7XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbn1cclxuIl19